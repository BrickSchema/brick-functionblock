@prefix brick: <https://brickschema.org/schema/1.0.3/Brick#> .
@prefix bf: <https://brickschema.org/schema/1.0.3/BrickFrame#> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix xml: <http://www.w3.org/XML/1998/namespace> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

@prefix fb: <https://brickschema.org/schema/1.0.3/BrickFunctionalBlock#> .


fb:Port a owl:Class.
fb:Input a owl:Class;
    rdfs:subClassOf fb:Port.
fb:Output a owl:Class;
    rdfs:subClassOf fb:Port.

fb:hasPort a owl:ObjectProperty.
fb:hasInput rdfs:subPropertyOf fb:hasPort;
    a owl:ObjectProperty.
fb:hasOutput rdfs:subPropertyOf fb:hasPort;
    a owl:ObjectProperty.
fb:hasFunction a owl:ObjectProperty.
fb:mayHaveFunction a owl:AnnotationProperty.

fb:FunctionalBlock a owl:Class;
    skos:definition "FunctionalBlock is a functional abstraction over a collection of data points. It provides input/output interface as well as its functional description, which can be connected to other descriptional models such as IoT extension of schema.org. Input is the allowed interface to control the output. Internally, 'controls' relationship represents control dependency between the points. Each functional block has associated 'schemaorg:Capability' indicating what it is capable of, such as temperature change.";
    rdfs:subClassOf [
        a owl:Restriction;
        owl:onProperty fb:hasInput;
        owl:allValuesFrom fb:Input;
        ];
    rdfs:subClassOf [
        a owl:Restriction;
        owl:onProperty fb:hasOutput;
        owl:allValuesFrom fb:Output;
        ].
